name: Release SBOM with CycloneDX for Go

on:
  workflow_call:
    inputs:
      sbom_name:
        description: 'Name der SBOM-Datei (ohne .json)'
        required: false
        default: 'sbom'
        type: string
    secrets:
      GH_TOKEN:
        required: true
        
jobs:
  scan-tags:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      TARGET_REPO: ${{ github.repository }}
    steps:
      - name: Checkout central repo (for logs only)
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.8'
      
      - name: Install cyclonedx-gomod
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@v1.9.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Get all tags from target repo
        run: |
          gh repo clone $TARGET_REPO temp-repo -- --quiet
          cd temp-repo
          git fetch --tags
          git tag > ../tags.txt

      - name: Process tags
        run: |
          SBOM_NAME="${{ inputs.sbom_name }}.json"

          while read -r TAG; do
            echo "üîç Checking tag: $TAG"
            RELEASE_INFO=$(gh release view "$TAG" -R $TARGET_REPO --json assets --jq '.assets[].name' 2>/dev/null || echo "no-release")

            if [[ "$RELEASE_INFO" == "no-release" ]]; then
              echo "‚è≠Ô∏è No Release for Tag $TAG. Skipping."
              continue
            fi

            if echo "$RELEASE_INFO" | grep -q "$SBOM_NAME"; then
              echo "‚úÖ SBOM already exists for $TAG ($SBOM_NAME)."
              continue
            fi

            echo "üöß SBOM missing for $TAG. Generating..."
            rm -rf temp-repo
            gh repo clone $TARGET_REPO temp-repo -- --quiet
            cd temp-repo
            git checkout "tags/$TAG"

            # SBOM erstellen
            cyclonedx-gomod mod -licenses -output "$SBOM_NAME"

            # Hochladen zum Release
            gh release upload "$TAG" "$SBOM_NAME" -R $TARGET_REPO --clobber
            echo "‚úÖ SBOM for $TAG created and uploaded as $SBOM_NAME"

            cd ..
          done < tags.txt

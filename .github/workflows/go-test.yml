name: Go Tests

on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: '1.24'
      use-docker-compose:
        required: false
        type: boolean
        default: false
      compose-file:
        required: false
        type: string
        default: 'docker-compose.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: Start docker-compose (optional)
        if: ${{ inputs.use-docker-compose }}
        run: |
          docker compose -f ${{ inputs.compose-file }} up -d
          sleep 10

      - name: Find all go.mod files and run tests per module
        run: |
          set -e
          find . -name 'go.mod' | while read modfile; do
            moddir=$(dirname "$modfile")
            echo "==> Testing module in $moddir"
            cd "$moddir"

            echo "-> Running go mod tidy"
            go mod tidy

            if find . -type f -name '*_test.go' | grep -q .; then
              echo "-> Found tests, running go test"
              go test ./... -v
            else
              echo "-> No tests found in $moddir, skipping"
            fi

            cd - > /dev/null
          done

      - name: Stop docker-compose (optional)
        if: ${{ inputs.use-docker-compose }}
        run: docker compose -f ${{ inputs.compose-file }} down
